import { useState, useEffect } from 'react';
import styles from './management.module.scss';

const ActiveRentals = () => {
  const [rentals, setRentals] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedRental, setSelectedRental] = useState(null);

  useEffect(() => {
    loadRentals();
  }, []);

  const loadRentals = async () => {
    try {
      setTimeout(() => {
        const mockRentals = [
          {
            id: 1,
            clientName: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
            clientPhone: '+7 (912) 345-67-89',
            clientEmail: 'ivan@mail.ru',
            propertyTitle: '3-–∫–æ–º–Ω. –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ',
            propertyAddress: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 25',
            startDate: '2024-01-01',
            endDate: '2024-12-31',
            monthlyRent: 45000,
            deposit: 90000,
            status: 'active',
            contractNumber: '–ê–†-2024-001',
            paymentDay: 1,
            lastPayment: '2024-01-01',
            nextPayment: '2024-02-01'
          },
          {
            id: 2,
            clientName: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
            clientPhone: '+7 (923) 456-78-90',
            clientEmail: 'maria@mail.ru',
            propertyTitle: '1-–∫–æ–º–Ω. –∫–≤–∞—Ä—Ç–∏—Ä–∞',
            propertyAddress: '–ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 15',
            startDate: '2024-01-15',
            endDate: '2024-07-15',
            monthlyRent: 28000,
            deposit: 56000,
            status: 'active',
            contractNumber: '–ê–†-2024-002',
            paymentDay: 15,
            lastPayment: '2024-01-15',
            nextPayment: '2024-02-15'
          },
          {
            id: 3,
            clientName: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤',
            clientPhone: '+7 (934) 567-89-01',
            clientEmail: 'alex@mail.ru',
            propertyTitle: '2-–∫–æ–º–Ω. –∫–≤–∞—Ä—Ç–∏—Ä–∞',
            propertyAddress: '–ú–æ—Å–∫–≤–∞, –ø—Ä. –ú–∏—Ä–∞, –¥. 45',
            startDate: '2023-11-01',
            endDate: '2024-10-31',
            monthlyRent: 35000,
            deposit: 70000,
            status: 'active',
            contractNumber: '–ê–†-2023-045',
            paymentDay: 1,
            lastPayment: '2024-01-01',
            nextPayment: '2024-02-01'
          }
        ];
        setRentals(mockRentals);
        setLoading(false);
      }, 1000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ä–µ–Ω–¥:', error);
      setLoading(false);
    }
  };

  const calculateDaysUntilPayment = (nextPaymentDate) => {
    const today = new Date();
    const paymentDate = new Date(nextPaymentDate);
    const diffTime = paymentDate - today;
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    return diffDays;
  };

  const handleExtendRental = (rentalId) => {
    console.log('–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã:', rentalId);
  };

  const handleTerminateRental = (rentalId) => {
    console.log('–†–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã:', rentalId);
  };

  if (loading) {
    return <div className={styles.loadingSection}>–ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞—Ä–µ–Ω–¥...</div>;
  }

  return (
    <div className={styles.section}>
      <div className={styles.sectionHeader}>
        <h2>üìÑ –ê–∫—Ç–∏–≤–Ω—ã–µ –∞—Ä–µ–Ω–¥—ã</h2>
        <div className={styles.sectionStats}>
          <span className={styles.stat}>
            –í—Å–µ–≥–æ: {rentals.length}
          </span>
          <span className={styles.stat}>
            –°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç–µ–∂: {rentals.filter(r => calculateDaysUntilPayment(r.nextPayment) <= 7).length}
          </span>
        </div>
      </div>

      <div className={styles.rentalsGrid}>
        {rentals.map(rental => {
          const daysUntilPayment = calculateDaysUntilPayment(rental.nextPayment);
          const paymentStatus = daysUntilPayment <= 7 ? 'soon' : daysUntilPayment <= 0 ? 'overdue' : 'normal';

          return (
            <div key={rental.id} className={styles.rentalCard}>
              <div className={styles.rentalHeader}>
                <div className={styles.rentalTitle}>
                  <h3>{rental.propertyTitle}</h3>
                  <span className={`${styles.contractBadge} ${styles[paymentStatus]}`}>
                    {paymentStatus === 'soon' && `–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ ${daysUntilPayment} –¥–Ω.`}
                    {paymentStatus === 'overdue' && '–ü—Ä–æ—Å—Ä–æ—á–∫–∞'}
                    {paymentStatus === 'normal' && '–ê–∫—Ç–∏–≤–Ω–∞'}
                  </span>
                </div>
                <span className={styles.contractNumber}>
                  {rental.contractNumber}
                </span>
              </div>

              <div className={styles.rentalMain}>
                <div className={styles.clientInfo}>
                  <h4>–ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä:</h4>
                  <p><strong>–ò–º—è:</strong> {rental.clientName}</p>
                  <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {rental.clientPhone}</p>
                  <p><strong>Email:</strong> {rental.clientEmail}</p>
                </div>

                <div className={styles.rentalInfo}>
                  <h4>–£—Å–ª–æ–≤–∏—è –∞—Ä–µ–Ω–¥—ã:</h4>
                  <p><strong>–ê—Ä–µ–Ω–¥–Ω–∞—è –ø–ª–∞—Ç–∞:</strong> {rental.monthlyRent.toLocaleString()} ‚ÇΩ/–º–µ—Å</p>
                  <p><strong>–ó–∞–ª–æ–≥:</strong> {rental.deposit.toLocaleString()} ‚ÇΩ</p>
                  <p><strong>–ü–µ—Ä–∏–æ–¥:</strong> {rental.startDate} - {rental.endDate}</p>
                  <p><strong>–î–µ–Ω—å –æ–ø–ª–∞—Ç—ã:</strong> {rental.paymentDay} —á–∏—Å–ª–æ</p>
                </div>

                <div className={styles.paymentInfo}>
                  <h4>–ü–ª–∞—Ç–µ–∂–∏:</h4>
                  <p><strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂:</strong> {rental.lastPayment}</p>
                  <p><strong>–°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç–µ–∂:</strong> {rental.nextPayment}</p>
                  <p className={`${styles.paymentStatus} ${styles[paymentStatus]}`}>
                    {paymentStatus === 'soon' && '‚ö†Ô∏è –°–∫–æ—Ä–æ –æ–ø–ª–∞—Ç–∞'}
                    {paymentStatus === 'overdue' && '‚ùå –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ'}
                    {paymentStatus === 'normal' && '‚úÖ –í –ø–æ—Ä—è–¥–∫–µ'}
                  </p>
                </div>
              </div>

              <div className={styles.rentalActions}>
                <button 
                  className={styles.extendBtn}
                  onClick={() => handleExtendRental(rental.id)}
                >
                  üìÖ –ü—Ä–æ–¥–ª–∏—Ç—å
                </button>
                <button 
                  className={styles.terminateBtn}
                  onClick={() => handleTerminateRental(rental.id)}
                >
                  üìÑ –†–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç—å
                </button>
                <button 
                  className={styles.contactBtn}
                  onClick={() => window.open(`tel:${rental.clientPhone}`)}
                >
                  üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                </button>
                <button 
                  className={styles.detailsBtn}
                  onClick={() => setSelectedRental(selectedRental?.id === rental.id ? null : rental)}
                >
                  {selectedRental?.id === rental.id ? '‚ñ≤' : '‚ñº'} –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </button>
              </div>

              {selectedRental?.id === rental.id && (
                <div className={styles.rentalAdditionalInfo}>
                  <div className={styles.additionalSection}>
                    <h4>–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞:</h4>
                    <p>{rental.propertyAddress}</p>
                  </div>
                  <div className={styles.additionalSection}>
                    <h4>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π:</h4>
                    <div className={styles.paymentHistory}>
                      <div className={styles.paymentItem}>
                        <span>–Ø–Ω–≤–∞—Ä—å 2024</span>
                        <span className={styles.paid}>–û–ø–ª–∞—á–µ–Ω–æ</span>
                      </div>
                      <div className={styles.paymentItem}>
                        <span>–î–µ–∫–∞–±—Ä—å 2023</span>
                        <span className={styles.paid}>–û–ø–ª–∞—á–µ–Ω–æ</span>
                      </div>
                      <div className={styles.paymentItem}>
                        <span>–ù–æ—è–±—Ä—å 2023</span>
                        <span className={styles.paid}>–û–ø–ª–∞—á–µ–Ω–æ</span>
                      </div>
                    </div>
                  </div>
                  <div className={styles.additionalSection}>
                    <h4>–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</h4>
                    <textarea 
                      placeholder="–î–æ–±–∞–≤—å—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ –∞—Ä–µ–Ω–¥–µ..."
                      className={styles.notesTextarea}
                    />
                  </div>
                </div>
              )}
            </div>
          );
        })}
      </div>

      {rentals.length === 0 && (
        <div className={styles.emptyState}>
          <p>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞—Ä–µ–Ω–¥</p>
        </div>
      )}
    </div>
  );
};

export default ActiveRentals;