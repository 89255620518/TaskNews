import { useState, useEffect } from 'react';
import { api } from '../../../../api/api';
import styles from './management.module.scss';

const ClientsManagement = () => {
  const [clients, setClients] = useState([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedClient, setSelectedClient] = useState(null);

  useEffect(() => {
    loadClients();
  }, []);

  const loadClients = async () => {
    try {
      const response = await api.users.getAll();
      const allUsers = response.data?.users || response.data || [];
      const clientUsers = allUsers.filter(user => user.role === 'user');
      setClients(clientUsers);
      setLoading(false);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤:', error);
      setLoading(false);
    }
  };

  const filteredClients = clients.filter(client =>
    `${client.firstName || ''} ${client.lastName || ''}`.toLowerCase().includes(searchTerm.toLowerCase()) ||
    client.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||
    (client.phoneNumber && client.phoneNumber.includes(searchTerm))
  );

  const handleContact = (client, method) => {
    if (method === 'phone' && client.phoneNumber) {
      window.open(`tel:${client.phoneNumber}`);
    } else if (method === 'email' && client.email) {
      window.open(`mailto:${client.email}`);
    }
  };

  if (loading) {
    return <div className={styles.loadingSection}>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤...</div>;
  }

  return (
    <div className={styles.section}>
      <div className={styles.sectionHeader}>
        <h2>üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏</h2>
        <div className={styles.sectionStats}>
          <span className={styles.stat}>
            –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {clients.length}
          </span>
        </div>
      </div>

      <div className={styles.searchBox}>
        <input
          type="text"
          placeholder="–ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –∏–º–µ–Ω–∏, email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className={styles.searchInput}
        />
      </div>

      <div className={styles.clientsGrid}>
        {filteredClients.map(client => (
          <div key={client.id} className={styles.clientCard}>
            <div className={styles.clientHeader}>
              <div className={styles.clientAvatar}>
                {(client.firstName?.[0] || '') + (client.lastName?.[0] || '')}
              </div>
              <div className={styles.clientMainInfo}>
                <h3>{client.firstName} {client.lastName}</h3>
                <p className={styles.clientEmail}>{client.email}</p>
              </div>
            </div>
            
            <div className={styles.clientDetails}>
              {client.phoneNumber && (
                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {client.phoneNumber}</p>
              )}
              <p><strong>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</strong> {new Date(client.createdAt).toLocaleDateString('ru-RU')}</p>
              {client.lastLogin && (
                <p><strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥:</strong> {new Date(client.lastLogin).toLocaleDateString('ru-RU')}</p>
              )}
            </div>

            <div className={styles.clientActions}>
              {client.phoneNumber && (
                <button 
                  className={styles.contactBtn}
                  onClick={() => handleContact(client, 'phone')}
                >
                  üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                </button>
              )}
              <button 
                className={styles.messageBtn}
                onClick={() => handleContact(client, 'email')}
              >
                ‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å
              </button>
              <button 
                className={styles.detailsBtn}
                onClick={() => setSelectedClient(selectedClient?.id === client.id ? null : client)}
              >
                {selectedClient?.id === client.id ? '‚ñ≤' : '‚ñº'} –ü–æ–¥—Ä–æ–±–Ω–µ–µ
              </button>
            </div>

            {selectedClient?.id === client.id && (
              <div className={styles.clientAdditionalInfo}>
                <div className={styles.additionalSection}>
                  <h4>–ê–∫—Ç–∏–≤–Ω—ã–µ –∞—Ä–µ–Ω–¥—ã:</h4>
                  <p>2 –æ–±—ä–µ–∫—Ç–∞</p>
                </div>
                <div className={styles.additionalSection}>
                  <h4>–ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫:</h4>
                  <p>5 –∑–∞—è–≤–æ–∫, 3 –æ–¥–æ–±—Ä–µ–Ω–æ</p>
                </div>
                <div className={styles.additionalSection}>
                  <h4>–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</h4>
                  <textarea 
                    placeholder="–î–æ–±–∞–≤—å—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ..."
                    className={styles.notesTextarea}
                  />
                </div>
              </div>
            )}
          </div>
        ))}
      </div>

      {filteredClients.length === 0 && (
        <div className={styles.emptyState}>
          <p>–ö–ª–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
        </div>
      )}
    </div>
  );
};

export default ClientsManagement;