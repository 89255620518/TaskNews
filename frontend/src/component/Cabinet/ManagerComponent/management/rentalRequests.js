import { useState, useEffect } from 'react';
import styles from './management.module.scss';

const RentalRequests = () => {
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedRequest, setSelectedRequest] = useState(null);

  useEffect(() => {
    loadRequests();
  }, []);

  const loadRequests = async () => {
    try {
      setTimeout(() => {
        const mockRequests = [
          {
            id: 1,
            clientName: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
            clientPhone: '+7 (912) 345-67-89',
            clientEmail: 'ivan@mail.ru',
            propertyTitle: '3-–∫–æ–º–Ω. –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ',
            propertyAddress: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 25',
            date: '2024-01-15',
            status: 'new',
            budget: 45000,
            duration: '12 –º–µ—Å—è—Ü–µ–≤',
            message: '–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –∞—Ä–µ–Ω–¥–∞ –¥–ª—è —Å–µ–º—å–∏'
          },
          {
            id: 2,
            clientName: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
            clientPhone: '+7 (923) 456-78-90',
            clientEmail: 'maria@mail.ru',
            propertyTitle: '1-–∫–æ–º–Ω. –∫–≤–∞—Ä—Ç–∏—Ä–∞',
            propertyAddress: '–ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 15',
            date: '2024-01-14',
            status: 'processing',
            budget: 28000,
            duration: '6 –º–µ—Å—è—Ü–µ–≤',
            message: '–ò—â—É –∫–≤–∞—Ä—Ç–∏—Ä—É –Ω–µ–¥–∞–ª–µ–∫–æ –æ—Ç –º–µ—Ç—Ä–æ'
          },
          {
            id: 3,
            clientName: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤',
            clientPhone: '+7 (934) 567-89-01',
            clientEmail: 'alex@mail.ru',
            propertyTitle: '2-–∫–æ–º–Ω. –∫–≤–∞—Ä—Ç–∏—Ä–∞',
            propertyAddress: '–ú–æ—Å–∫–≤–∞, –ø—Ä. –ú–∏—Ä–∞, –¥. 45',
            date: '2024-01-13',
            status: 'approved',
            budget: 35000,
            duration: '24 –º–µ—Å—è—Ü–∞',
            message: '–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —Å –∂–µ–Ω–æ–π –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è'
          }
        ];
        setRequests(mockRequests);
        setLoading(false);
      }, 1000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫:', error);
      setLoading(false);
    }
  };

  const handleStatusChange = async (requestId, newStatus) => {
    try {
      setRequests(prev => prev.map(req => 
        req.id === requestId ? { ...req, status: newStatus } : req
      ));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
    }
  };

  const getStatusText = (status) => {
    const statusMap = {
      'new': '–ù–æ–≤–∞—è',
      'processing': '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
      'approved': '–û–¥–æ–±—Ä–µ–Ω–∞',
      'rejected': '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞'
    };
    return statusMap[status] || status;
  };

  if (loading) {
    return <div className={styles.loadingSection}>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫...</div>;
  }

  return (
    <div className={styles.section}>
      <div className={styles.sectionHeader}>
        <h2>üìã –ó–∞—è–≤–∫–∏ –Ω–∞ –∞—Ä–µ–Ω–¥—É</h2>
        <div className={styles.sectionStats}>
          <span className={styles.stat}>
            –ù–æ–≤—ã–µ: {requests.filter(r => r.status === 'new').length}
          </span>
          <span className={styles.stat}>
            –í —Ä–∞–±–æ—Ç–µ: {requests.filter(r => r.status === 'processing').length}
          </span>
        </div>
      </div>

      <div className={styles.requestsContainer}>
        {requests.map(request => (
          <div key={request.id} className={`${styles.requestCard} ${styles[request.status]}`}>
            <div className={styles.requestHeader}>
              <div className={styles.requestTitle}>
                <h3>{request.propertyTitle}</h3>
                <span className={`${styles.statusBadge} ${styles[request.status]}`}>
                  {getStatusText(request.status)}
                </span>
              </div>
              <button 
                className={styles.detailsBtn}
                onClick={() => setSelectedRequest(selectedRequest?.id === request.id ? null : request)}
              >
                {selectedRequest?.id === request.id ? '‚ñ≤' : '‚ñº'} –î–µ—Ç–∞–ª–∏
              </button>
            </div>
            
            <div className={styles.requestMain}>
              <div className={styles.clientInfo}>
                <p><strong>–ö–ª–∏–µ–Ω—Ç:</strong> {request.clientName}</p>
                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {request.clientPhone}</p>
                <p><strong>Email:</strong> {request.clientEmail}</p>
              </div>
              <div className={styles.propertyInfo}>
                <p><strong>–ê–¥—Ä–µ—Å:</strong> {request.propertyAddress}</p>
                <p><strong>–ë—é–¥–∂–µ—Ç:</strong> {request.budget.toLocaleString()} ‚ÇΩ/–º–µ—Å</p>
                <p><strong>–°—Ä–æ–∫:</strong> {request.duration}</p>
              </div>
            </div>

            {selectedRequest?.id === request.id && (
              <div className={styles.requestDetails}>
                <div className={styles.detailSection}>
                  <h4>–°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞:</h4>
                  <p>{request.message}</p>
                </div>
                <div className={styles.detailSection}>
                  <h4>–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏:</h4>
                  <p>{request.date}</p>
                </div>
              </div>
            )}

            <div className={styles.requestActions}>
              {request.status === 'new' && (
                <>
                  <button 
                    className={styles.processBtn}
                    onClick={() => handleStatusChange(request.id, 'processing')}
                  >
                    –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É
                  </button>
                  <button 
                    className={styles.rejectBtn}
                    onClick={() => handleStatusChange(request.id, 'rejected')}
                  >
                    –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                  </button>
                </>
              )}
              {request.status === 'processing' && (
                <>
                  <button 
                    className={styles.approveBtn}
                    onClick={() => handleStatusChange(request.id, 'approved')}
                  >
                    –û–¥–æ–±—Ä–∏—Ç—å
                  </button>
                  <button 
                    className={styles.rejectBtn}
                    onClick={() => handleStatusChange(request.id, 'rejected')}
                  >
                    –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                  </button>
                </>
              )}
              {(request.status === 'approved' || request.status === 'rejected') && (
                <button 
                  className={styles.resetBtn}
                  onClick={() => handleStatusChange(request.id, 'new')}
                >
                  –í–µ—Ä–Ω—É—Ç—å –≤ –Ω–æ–≤—ã–µ
                </button>
              )}
              <button className={styles.contactBtn}>
                üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å
              </button>
            </div>
          </div>
        ))}
      </div>

      {requests.length === 0 && (
        <div className={styles.emptyState}>
          <p>–ù–µ—Ç –∑–∞—è–≤–æ–∫ –Ω–∞ –∞—Ä–µ–Ω–¥—É</p>
        </div>
      )}
    </div>
  );
};

export default RentalRequests;